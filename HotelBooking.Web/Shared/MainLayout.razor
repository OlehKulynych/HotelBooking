@using Blazored.LocalStorage;
@using HotelBooking.Web.Providers;
@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <i class="mdi mdi-account me-1"></i>@context.User.Identity.Name
                    </div>

                    <div class="nav-item px-3">
                        <button @onclick="SignOut" class="btn btnAccount btn-lg">
                            <span class="mdi mdi-logout"></span> Sign Out
                        </button>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn btnAccount btn-lg" style="text-decoration:none;" href="/signin">
                            <span class="mdi mdi-login" aria-hidden="true"></span> Sign In
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link btn btnRegister btn-lg" style="text-decoration:none;" href="/register">
                            <span class="mdi mdi-login" aria-hidden="true"></span> Register
                        </NavLink>
                    </div>



                </NotAuthorized>
            </AuthorizeView>

        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    [Inject] ILocalStorageService localStorageService { get; set; }
    [Inject] AuthenticationStateProvider authenticationStateProvider { get; set; }

    [Inject] NavigationManager navigationManager { get; set; }

    private async Task SignOut()
    {
        if (await localStorageService.ContainKeyAsync("bearerToken"))
        {
            await localStorageService.RemoveItemAsync("bearerToken");
            ((ClientAuthenticationStateProvider)authenticationStateProvider).SignOut();
        }
        StateHasChanged();
        navigationManager.NavigateTo("/");
    }
}